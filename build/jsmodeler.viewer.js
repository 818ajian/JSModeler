/* JSModeler 0.40 - http://www.github.com/kovacsv/JSModeler */ 'use strict';JSM.ConvertBodyToThreeMeshes=function(a,b,c){var d={textureLoadedCallback:null,hasConvexPolygons:!1,doubleSided:!0};void 0!==c&&null!==c&&(d.textureLoadedCallback=JSM.ValueOrDefault(c.textureLoadedCallback,d.textureLoadedCallback),d.hasConvexPolygons=JSM.ValueOrDefault(c.hasConvexPolygons,d.hasConvexPolygons),d.doubleSided=JSM.ValueOrDefault(c.doubleSided,d.doubleSided));var g=[],f=null,e=null;JSM.ExplodeBody(a,b,{hasConvexPolygons:d.hasConvexPolygons,onGeometryStart:function(a){var b=
null!==a.texture,c=1!==a.opacity,g=a.ambient,G=a.diffuse,n=a.specular,m=a.shininess;0===m&&(n=0,m=1);e=new THREE.MeshPhongMaterial({ambient:g,color:G,specular:n,shininess:m});d.doubleSided&&(e.side=THREE.DoubleSide);c&&(e.opacity=a.opacity,e.transparent=!0);if(b){var l=THREE.ImageUtils.loadTexture(a.texture,new THREE.UVMapping,function(){l.image=JSM.ResizeImageToPowerOfTwoSides(l.image);null!==d.textureLoadedCallback&&d.textureLoadedCallback()});l.wrapS=THREE.RepeatWrapping;l.wrapT=THREE.RepeatWrapping;
e.map=l}f=new THREE.Geometry},onGeometryEnd:function(){f.computeFaceNormals();var a=new THREE.Mesh(f,e);g.push(a)},onTriangle:function(a,b,d,c,g,e,m,l,k){var E=f.vertices.length;f.vertices.push(new THREE.Vector3(a.x,a.y,a.z));f.vertices.push(new THREE.Vector3(b.x,b.y,b.z));f.vertices.push(new THREE.Vector3(d.x,d.y,d.z));a=new THREE.Face3(E+0,E+1,E+2);f.faces.push(a);null!==c&&(null!==g&&null!==e)&&(a=[],a.push(new THREE.Vector3(c.x,c.y,c.z)),a.push(new THREE.Vector3(g.x,g.y,g.z)),a.push(new THREE.Vector3(e.x,
e.y,e.z)),f.faces[f.faces.length-1].vertexNormals=a);null!==m&&(null!==l&&null!==k)&&(c=[],c.push(new THREE.Vector2(m.x,-m.y)),c.push(new THREE.Vector2(l.x,-l.y)),c.push(new THREE.Vector2(k.x,-k.y)),f.faceVertexUvs[0].push(c))},onLineGeometryStart:function(a){var b=1!==a.opacity;e=new THREE.LineBasicMaterial({ambient:a.ambient,color:a.diffuse});b&&(e.opacity=a.opacity,e.transparent=!0)},onLineGeometryEnd:function(){},onLine:function(a,b){var c=new THREE.Geometry;c.vertices.push(new THREE.Vector3(a.x,
a.y,a.z));c.vertices.push(new THREE.Vector3(b.x,b.y,b.z));c=new THREE.Line(c,e);g.push(c)}});return g};JSM.ConvertModelToThreeMeshes=function(a,b,c){var d=[],g,f,e;for(g=0;g<a.BodyCount();g++){f=a.GetBody(g);e=JSM.ConvertBodyToThreeMeshes(f,b,c);for(f=0;f<e.length;f++)d.push(e[f])}return d};
JSM.ConvertJSONDataToThreeMeshes=function(a,b,c){function d(a,c){function d(a){function l(a,b,c,d,e){c=new THREE.Vector2(a,b);JSM.IsZero(e)||(d=Math.sin(e*JSM.DegRad),e=Math.cos(e*JSM.DegRad),c.x=e*a-d*b,c.y=d*a+e*b);c.x=k[0]+c.x*u[0];c.y=k[1]+c.y*u[1];return c}var p=a.parameters,h=f[a.material];a=h.texture;var k=h.offset,u=h.scale,y=h.rotation,v=new THREE.Color,w=new THREE.Color,x=new THREE.Color,z=h.shininess;v.setRGB(h.ambient[0],h.ambient[1],h.ambient[2]);w.setRGB(h.diffuse[0],h.diffuse[1],h.diffuse[2]);
x.setRGB(h.specular[0],h.specular[1],h.specular[2]);if(void 0!==a&&null!==a){v.setRGB(1,1,1);w.setRGB(1,1,1);x.setRGB(1,1,1);if(void 0===k||null===k)k=[0,0];if(void 0===u||null===u)u=[1,1];if(void 0===y||null===y)y=0}0===z&&(x.setRGB(0,0,0),z=1);v=new THREE.MeshPhongMaterial({ambient:w.getHex(),color:w.getHex(),specular:x.getHex(),shininess:z,side:THREE.DoubleSide});1!==h.opacity&&(v.opacity=h.opacity,v.transparent=!0);void 0!==a&&null!==a&&(h=THREE.ImageUtils.loadTexture(a,new THREE.UVMapping,function(a){a.image=
JSM.ResizeImageToPowerOfTwoSides(a.image);void 0!==b&&null!==b&&b()}),h.wrapS=THREE.RepeatWrapping,h.wrapT=THREE.RepeatWrapping,v.map=h);var h=new THREE.Geometry,s,r,A,t,B,C,D,F,q;for(q=0;q<p.length;q+=9)s=3*p[q+0],r=3*p[q+1],A=3*p[q+2],t=3*p[q+3],B=3*p[q+4],C=3*p[q+5],w=2*p[q+6],x=2*p[q+7],z=2*p[q+8],D=h.vertices.length,F=h.faces.length,h.vertices.push(new THREE.Vector3(e[s+0],e[s+1],e[s+2])),h.vertices.push(new THREE.Vector3(e[r+0],e[r+1],e[r+2])),h.vertices.push(new THREE.Vector3(e[A+0],e[A+1],
e[A+2])),h.faces.push(new THREE.Face3(D+0,D+1,D+2)),s=[],s.push(new THREE.Vector3(n[t+0],n[t+1],n[t+2])),s.push(new THREE.Vector3(n[B+0],n[B+1],n[B+2])),s.push(new THREE.Vector3(n[C+0],n[C+1],n[C+2])),h.faces[F].vertexNormals=s,void 0!==a&&null!==a&&(t=[],t.push(l(m[w+0],m[w+1],k,u,y)),t.push(l(m[x+0],m[x+1],k,u,y)),t.push(l(m[z+0],m[z+1],k,u,y)),h.faceVertexUvs[0].push(t));p=new THREE.Mesh(h,v);p.originalJsonIndex=c;g.push(p)}var e=a.vertices;if(void 0!==e){var n=a.normals;if(void 0!==n){var m=a.uvs;
if(void 0!==m){var l=a.triangles,k;for(k=0;k<l.length;k++)d(l[k])}}}}var g=[],f=a.materials;if(void 0===f)return g;var e=a.meshes;if(void 0===e)return g;var r=0;JSM.AsyncRunTask(function(){d(e[r],r);r+=1;return!0},c,e.length,0,g);return g};JSM.JSONFileConverter=function(a,b){this.onReady=a;this.onTextureLoaded=b};JSM.JSONFileConverter.prototype.Convert=function(a){(new JSM.JSONFileLoader(this.OnReady.bind(this))).Load(a)};
JSM.JSONFileConverter.prototype.OnReady=function(a){null!==this.onReady&&(a=JSM.ConvertJSONDataToThreeMeshes(a,this.onTextureLoaded),this.onReady(a))};JSM.ThreeViewer=function(){this.enableDraw=this.drawLoop=this.settings=this.navigation=this.cameraMove=this.runAfterRender=this.runBeforeRender=this.directionalLight=this.ambientLight=this.renderer=this.camera=this.scene=this.canvas=null};
JSM.ThreeViewer.prototype.Start=function(a,b){if(!JSM.IsWebGLEnabled()||!this.InitSettings(b)||!this.InitThree(a)||!this.InitCamera(b)||!this.InitLights())return!1;this.drawLoop=!1;this.enableDraw=!0;this.DrawIfNeeded();return!0};
JSM.ThreeViewer.prototype.InitSettings=function(a){this.settings={cameraEyePosition:new JSM.Coord(1,1,1),cameraCenterPosition:new JSM.Coord(0,0,0),cameraUpVector:new JSM.Coord(0,0,1),lightAmbientColor:[0.5,0.5,0.5],lightDiffuseColor:[0.5,0.5,0.5]};void 0!==a&&(void 0!==a.cameraEyePosition&&(this.settings.cameraEyePosition=JSM.CoordFromArray(a.cameraEyePosition)),void 0!==a.cameraCenterPosition&&(this.settings.cameraCenterPosition=JSM.CoordFromArray(a.cameraCenterPosition)),void 0!==a.cameraUpVector&&
(this.settings.cameraUpVector=JSM.CoordFromArray(a.cameraUpVector)),void 0!==a.lightAmbientColor&&(this.settings.lightAmbientColor=a.lightAmbientColor),void 0!==a.lightDiffuseColor&&(this.settings.lightDiffuseColor=a.lightDiffuseColor));return!0};
JSM.ThreeViewer.prototype.InitThree=function(a){this.canvas=a;if(!this.canvas||!this.canvas.getContext)return!1;this.scene=new THREE.Scene;if(!this.scene)return!1;this.renderer=new THREE.WebGLRenderer({canvas:this.canvas,antialias:!0});if(!this.renderer)return!1;this.renderer.setClearColor(new THREE.Color(16777215));this.renderer.setSize(this.canvas.width,this.canvas.height);return!0};
JSM.ThreeViewer.prototype.InitCamera=function(a){this.cameraMove=new JSM.Camera(JSM.CoordFromArray(a.cameraEyePosition),JSM.CoordFromArray(a.cameraCenterPosition),JSM.CoordFromArray(a.cameraUpVector),a.fieldOfView,a.nearClippingPlane,a.farClippingPlane);if(!this.cameraMove)return!1;this.navigation=new JSM.Navigation;if(!this.navigation.Init(this.canvas,this.cameraMove,this.DrawIfNeeded.bind(this),this.Resize.bind(this)))return!1;this.camera=new THREE.PerspectiveCamera(this.cameraMove.fieldOfView,
this.canvas.width/this.canvas.height,this.cameraMove.nearClippingPlane,this.cameraMove.farClippingPlane);if(!this.camera)return!1;this.scene.add(this.camera);return!0};
JSM.ThreeViewer.prototype.InitLights=function(){var a=new THREE.Color,b=new THREE.Color;a.setRGB(this.settings.lightAmbientColor[0],this.settings.lightAmbientColor[1],this.settings.lightAmbientColor[2]);b.setRGB(this.settings.lightDiffuseColor[0],this.settings.lightDiffuseColor[1],this.settings.lightDiffuseColor[2]);this.ambientLight=new THREE.AmbientLight(a.getHex());if(!this.ambientLight)return!1;this.scene.add(this.ambientLight);this.directionalLight=new THREE.DirectionalLight(b.getHex());if(!this.directionalLight)return!1;
a=(new THREE.Vector3).subVectors(this.cameraMove.eye,this.cameraMove.center);this.directionalLight.position.set(a.x,a.y,a.z);this.scene.add(this.directionalLight);return!0};JSM.ThreeViewer.prototype.SetRunBeforeRender=function(a){this.runBeforeRender=a};JSM.ThreeViewer.prototype.SetRunAfterRender=function(a){this.runAfterRender=a};JSM.ThreeViewer.prototype.SetClearColor=function(a){this.renderer.setClearColor(new THREE.Color(a));this.DrawIfNeeded()};
JSM.ThreeViewer.prototype.AddMesh=function(a){this.scene.add(a);this.DrawIfNeeded()};JSM.ThreeViewer.prototype.AddMeshes=function(a){var b;for(b=0;b<a.length;b++)this.scene.add(a[b]);this.DrawIfNeeded()};JSM.ThreeViewer.prototype.MeshCount=function(){var a=0;this.scene.traverse(function(b){if(b instanceof THREE.Mesh||b instanceof THREE.Line)a+=1});return a};
JSM.ThreeViewer.prototype.VertexCount=function(){var a=0;this.scene.traverse(function(b){if(b instanceof THREE.Mesh||b instanceof THREE.Line)a+=b.geometry.vertices.length});return a};JSM.ThreeViewer.prototype.FaceCount=function(){var a=0;this.scene.traverse(function(b){b instanceof THREE.Mesh&&(a+=b.geometry.faces.length)});return a};
JSM.ThreeViewer.prototype.GetMesh=function(a){var b=null,c=0,d;for(d=0;d<this.scene.children.length;d++)if(b=this.scene.children[d],b instanceof THREE.Mesh||b instanceof THREE.Line){if(c==a)return b;c+=1}return null};JSM.ThreeViewer.prototype.RemoveMesh=function(a){a.geometry.dispose();this.scene.remove(a);this.DrawIfNeeded()};
JSM.ThreeViewer.prototype.RemoveMeshes=function(){var a,b;for(b=0;b<this.scene.children.length;b++)if(a=this.scene.children[b],a instanceof THREE.Mesh||a instanceof THREE.Line)a.geometry.dispose(),this.scene.remove(a),b--;this.DrawIfNeeded()};JSM.ThreeViewer.prototype.RemoveLastMesh=function(){var a=null;this.scene.traverse(function(b){if(b instanceof THREE.Mesh||b instanceof THREE.Line)a=b});null!==a&&this.scene.remove(a);this.DrawIfNeeded()};
JSM.ThreeViewer.prototype.SetCamera=function(a,b,c){this.navigation.SetCamera(a,b,c);this.navigation.SetOrbitCenter(b.Clone());this.DrawIfNeeded()};JSM.ThreeViewer.prototype.Resize=function(){this.camera.aspect=this.canvas.width/this.canvas.height;this.camera.updateProjectionMatrix();this.renderer.setSize(this.canvas.width,this.canvas.height);this.DrawIfNeeded()};
JSM.ThreeViewer.prototype.FitInWindow=function(){if(0!==this.MeshCount()){var a=this.GetBoundingSphere();this.navigation.FitInWindow(a.GetCenter(),a.GetRadius());this.DrawIfNeeded()}};JSM.ThreeViewer.prototype.AdjustClippingPlanes=function(a){this.GetBoundingSphere().GetRadius()<a?(this.camera.near=0.1,this.camera.far=1E3):(this.camera.near=10,this.camera.far=1E6);this.camera.updateProjectionMatrix();this.Draw()};JSM.ThreeViewer.prototype.GetCenter=function(){return this.GetBoundingBox().GetCenter()};
JSM.ThreeViewer.prototype.GetBoundingBox=function(){var a=new JSM.Coord(JSM.Inf,JSM.Inf,JSM.Inf),b=new JSM.Coord(-JSM.Inf,-JSM.Inf,-JSM.Inf),c,d;this.scene.traverse(function(g){if(g instanceof THREE.Mesh||g instanceof THREE.Line){c=g.geometry;var f;for(f=0;f<c.vertices.length;f++)d=c.vertices[f].clone(),d.add(g.position),a.x=JSM.Minimum(a.x,d.x),a.y=JSM.Minimum(a.y,d.y),a.z=JSM.Minimum(a.z,d.z),b.x=JSM.Maximum(b.x,d.x),b.y=JSM.Maximum(b.y,d.y),b.z=JSM.Maximum(b.z,d.z)}});return new JSM.Box(a,b)};
JSM.ThreeViewer.prototype.GetBoundingSphere=function(){var a=this.GetCenter(),b=0,c,d,g;this.scene.traverse(function(f){if(f instanceof THREE.Mesh||f instanceof THREE.Line){c=f.geometry;var e;for(e=0;e<c.vertices.length;e++)d=c.vertices[e].clone(),d.add(f.position),g=a.DistanceTo(new JSM.Coord(d.x,d.y,d.z)),JSM.IsGreater(g,b)&&(b=g)}});return new JSM.Sphere(a,b)};
JSM.ThreeViewer.prototype.GetObjectsUnderPosition=function(a,b){var c=2*(a/this.canvas.width)-1,d=2*-(b/this.canvas.height)+1,g=new THREE.Projector,f=this.camera.position,c=new THREE.Vector3(c,d,0.5);g.unprojectVector(c,this.camera);c.sub(f);c.normalize();return(new THREE.Raycaster(f,c)).intersectObjects(this.scene.children)};JSM.ThreeViewer.prototype.GetObjectsUnderMouse=function(){return this.GetObjectsUnderPosition(this.navigation.mouse.curr.x,this.navigation.mouse.curr.y)};
JSM.ThreeViewer.prototype.GetObjectsUnderTouch=function(){return this.GetObjectsUnderPosition(this.navigation.touch.curr.x,this.navigation.touch.curr.y)};JSM.ThreeViewer.prototype.ProjectVector=function(a,b,c){var d=this.canvas.width/2,g=this.canvas.height/2,f=new THREE.Projector;a=new THREE.Vector3(a,b,c);f.projectVector(a,this.camera);a.x=a.x*d+d;a.y=-(a.y*g)+g;return a};JSM.ThreeViewer.prototype.EnableDraw=function(a){this.enableDraw=a};
JSM.ThreeViewer.prototype.Draw=function(){if(this.enableDraw){null!==this.runBeforeRender&&this.runBeforeRender();this.camera.position.set(this.cameraMove.eye.x,this.cameraMove.eye.y,this.cameraMove.eye.z);this.camera.up.set(this.cameraMove.up.x,this.cameraMove.up.y,this.cameraMove.up.z);this.camera.lookAt(new THREE.Vector3(this.cameraMove.center.x,this.cameraMove.center.y,this.cameraMove.center.z));var a=(new THREE.Vector3).subVectors(this.cameraMove.eye,this.cameraMove.center);this.directionalLight.position.set(a.x,
a.y,a.z);this.renderer.render(this.scene,this.camera);null!==this.runAfterRender&&this.runAfterRender();this.drawLoop&&requestAnimationFrame(this.Draw.bind(this))}};JSM.ThreeViewer.prototype.DrawIfNeeded=function(){this.drawLoop||this.Draw()};JSM.ThreeViewer.prototype.StartDrawLoop=function(){this.drawLoop=!0;this.Draw()};
