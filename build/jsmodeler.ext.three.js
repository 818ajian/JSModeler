/* JSModeler 0.41 - http://www.github.com/kovacsv/JSModeler */ 'use strict';JSM.ConvertBodyToThreeMeshes=function(a,b,c){var d={textureLoadedCallback:null,hasConvexPolygons:!1};void 0!==c&&null!==c&&(d.textureLoadedCallback=JSM.ValueOrDefault(c.textureLoadedCallback,d.textureLoadedCallback),d.hasConvexPolygons=JSM.ValueOrDefault(c.hasConvexPolygons,d.hasConvexPolygons));var e=[],f=null,g=null;JSM.ExplodeBody(a,b,{hasConvexPolygons:d.hasConvexPolygons,onPointGeometryStart:function(a){g=new THREE.PointsMaterial({color:a.diffuse,size:a.pointSize});f=new THREE.Geometry},
onPointGeometryEnd:function(){var a=new THREE.Points(f,g);e.push(a)},onPoint:function(a){f.vertices.push(new THREE.Vector3(a.x,a.y,a.z))},onLineGeometryStart:function(a){f=new THREE.Geometry;g=new THREE.LineBasicMaterial({color:a.diffuse})},onLineGeometryEnd:function(){var a=new THREE.LineSegments(f,g);e.push(a)},onLine:function(a,b){f.vertices.push(new THREE.Vector3(a.x,a.y,a.z));f.vertices.push(new THREE.Vector3(b.x,b.y,b.z))},onGeometryStart:function(a){var b=null!==a.texture,c=1!==a.opacity,e=
a.diffuse,I=a.specular,G=a.shininess;0===G&&(I=0,G=1);g=new THREE.MeshPhongMaterial({color:e,specular:I,shininess:G});a.singleSided||(g.side=THREE.DoubleSide);c&&(g.opacity=a.opacity,g.transparent=!0);if(b){var l=g;a=a.texture;(new THREE.TextureLoader).load(a,function(a){a.image=JSM.ResizeImageToPowerOfTwoSides(a.image);a.wrapS=THREE.RepeatWrapping;a.wrapT=THREE.RepeatWrapping;l.map=a;l.needsUpdate=!0;null!==d.textureLoadedCallback&&d.textureLoadedCallback()})}f=new THREE.Geometry},onGeometryEnd:function(){f.computeFaceNormals();
var a=new THREE.Mesh(f,g);e.push(a)},onTriangle:function(a,b,d,c,g,e,l,p,u){var H=f.vertices.length;f.vertices.push(new THREE.Vector3(a.x,a.y,a.z));f.vertices.push(new THREE.Vector3(b.x,b.y,b.z));f.vertices.push(new THREE.Vector3(d.x,d.y,d.z));a=new THREE.Face3(H+0,H+1,H+2);f.faces.push(a);null!==c&&(null!==g&&null!==e)&&(a=[],a.push(new THREE.Vector3(c.x,c.y,c.z)),a.push(new THREE.Vector3(g.x,g.y,g.z)),a.push(new THREE.Vector3(e.x,e.y,e.z)),f.faces[f.faces.length-1].vertexNormals=a);null!==l&&(null!==
p&&null!==u)&&(c=[],c.push(new THREE.Vector2(l.x,-l.y)),c.push(new THREE.Vector2(p.x,-p.y)),c.push(new THREE.Vector2(u.x,-u.y)),f.faceVertexUvs[0].push(c))}});return e};JSM.ConvertModelToThreeMeshes=function(a,b,c){var d=[],e,f,g;for(e=0;e<a.BodyCount();e++){f=a.GetBody(e);g=JSM.ConvertBodyToThreeMeshes(f,b,c);for(f=0;f<g.length;f++)d.push(g[f])}return d};
JSM.ConvertJSONDataToThreeMeshes=function(a,b,c){function d(a,c,d){function g(a,d){function k(a,b,c,d,e){var f=new THREE.Vector2(a,b);if(!JSM.IsZero(e)){var g=Math.sin(e*JSM.DegRad);e=Math.cos(e*JSM.DegRad);f.x=e*a-g*b;f.y=g*a+e*b}f.x=c[0]+f.x*d[0];f.y=c[1]+f.y*d[1];return f}var m=a.parameters,h=f[a.material],s=h.texture,v=h.offset,w=h.scale,x=h.rotation,y=new THREE.Color,t=new THREE.Color,z=h.shininess||0;y.setRGB(h.diffuse[0],h.diffuse[1],h.diffuse[2]);t.setRGB(h.specular[0],h.specular[1],h.specular[2]);
if(void 0!==s&&null!==s){y.setRGB(1,1,1);t.setRGB(1,1,1);if(void 0===v||null===v)v=[0,0];if(void 0===w||null===w)w=[1,1];if(void 0===x||null===x)x=0}0===z&&(t.setRGB(0,0,0),z=1);var A=new THREE.MeshPhongMaterial({color:y.getHex(),specular:t.getHex(),shininess:z,side:THREE.DoubleSide});1!==h.opacity&&(A.opacity=h.opacity,A.transparent=!0);void 0!==s&&null!==s&&(new THREE.TextureLoader).load(s,function(a){a.image=JSM.ResizeImageToPowerOfTwoSides(a.image);a.wrapS=THREE.RepeatWrapping;a.wrapT=THREE.RepeatWrapping;
A.map=a;A.needsUpdate=!0;void 0!==b&&null!==b&&b()});var h=new THREE.Geometry,q,B,C,r,D,E,F,u,n;for(n=0;n<m.length;n+=9)q=3*m[n+0],B=3*m[n+1],C=3*m[n+2],r=3*m[n+3],D=3*m[n+4],E=3*m[n+5],y=2*m[n+6],t=2*m[n+7],z=2*m[n+8],F=h.vertices.length,u=h.faces.length,h.vertices.push(new THREE.Vector3(e[q+0],e[q+1],e[q+2])),h.vertices.push(new THREE.Vector3(e[B+0],e[B+1],e[B+2])),h.vertices.push(new THREE.Vector3(e[C+0],e[C+1],e[C+2])),h.faces.push(new THREE.Face3(F+0,F+1,F+2)),q=[],q.push(new THREE.Vector3(l[r+
0],l[r+1],l[r+2])),q.push(new THREE.Vector3(l[D+0],l[D+1],l[D+2])),q.push(new THREE.Vector3(l[E+0],l[E+1],l[E+2])),h.faces[u].vertexNormals=q,void 0!==s&&null!==s&&(r=[],r.push(k(p[y+0],p[y+1],v,w,x)),r.push(k(p[t+0],p[t+1],v,w,x)),r.push(k(p[z+0],p[z+1],v,w,x)),h.faceVertexUvs[0].push(r));m=new THREE.Mesh(h,A);m.originalJsonIndex=c;d.push(m)}var e=a.vertices;if(void 0!==e){var l=a.normals;if(void 0!==l){var p=a.uvs;if(void 0!==p){a=a.triangles;var k;for(k=0;k<a.length;k++)g(a[k],d)}}}}var e=[],f=
a.materials;if(void 0===f)return e;var g=a.meshes;if(void 0===g)return e;var k=0;JSM.AsyncRunTask(function(){d(g[k],k,e);k+=1;return!0},c,g.length,0,e);return e};JSM.ThreeViewer=function(){this.enableDraw=this.drawLoop=this.settings=this.navigation=this.cameraMove=this.runAfterRender=this.runBeforeRender=this.directionalLight=this.ambientLight=this.renderer=this.camera=this.scene=this.canvas=null};
JSM.ThreeViewer.prototype.Start=function(a,b){if(!JSM.IsWebGLEnabled()||!this.InitSettings(b)||!this.InitThree(a)||!this.InitCamera(b)||!this.InitLights())return!1;this.drawLoop=!1;this.enableDraw=!0;this.DrawIfNeeded();return!0};
JSM.ThreeViewer.prototype.InitSettings=function(a){this.settings={cameraEyePosition:new JSM.Coord(1,1,1),cameraCenterPosition:new JSM.Coord(0,0,0),cameraUpVector:new JSM.Coord(0,0,1),lightAmbientColor:[0.5,0.5,0.5],lightDiffuseColor:[0.5,0.5,0.5]};void 0!==a&&(void 0!==a.cameraEyePosition&&(this.settings.cameraEyePosition=JSM.CoordFromArray(a.cameraEyePosition)),void 0!==a.cameraCenterPosition&&(this.settings.cameraCenterPosition=JSM.CoordFromArray(a.cameraCenterPosition)),void 0!==a.cameraUpVector&&
(this.settings.cameraUpVector=JSM.CoordFromArray(a.cameraUpVector)),void 0!==a.lightAmbientColor&&(this.settings.lightAmbientColor=a.lightAmbientColor),void 0!==a.lightDiffuseColor&&(this.settings.lightDiffuseColor=a.lightDiffuseColor));return!0};
JSM.ThreeViewer.prototype.InitThree=function(a){this.canvas=a;if(!this.canvas||!this.canvas.getContext)return!1;this.scene=new THREE.Scene;if(!this.scene)return!1;this.renderer=new THREE.WebGLRenderer({canvas:this.canvas,antialias:!0});if(!this.renderer)return!1;this.renderer.setClearColor(new THREE.Color(16777215));this.renderer.setSize(this.canvas.width,this.canvas.height);return!0};
JSM.ThreeViewer.prototype.InitCamera=function(a){this.cameraMove=new JSM.Camera(JSM.CoordFromArray(a.cameraEyePosition),JSM.CoordFromArray(a.cameraCenterPosition),JSM.CoordFromArray(a.cameraUpVector),a.fieldOfView,a.nearClippingPlane,a.farClippingPlane);if(!this.cameraMove)return!1;this.navigation=new JSM.Navigation;if(!this.navigation.Init(this.canvas,this.cameraMove,this.DrawIfNeeded.bind(this),this.Resize.bind(this)))return!1;this.camera=new THREE.PerspectiveCamera(this.cameraMove.fieldOfView,
this.canvas.width/this.canvas.height,this.cameraMove.nearClippingPlane,this.cameraMove.farClippingPlane);if(!this.camera)return!1;this.scene.add(this.camera);return!0};
JSM.ThreeViewer.prototype.InitLights=function(){var a=new THREE.Color,b=new THREE.Color;a.setRGB(this.settings.lightAmbientColor[0],this.settings.lightAmbientColor[1],this.settings.lightAmbientColor[2]);b.setRGB(this.settings.lightDiffuseColor[0],this.settings.lightDiffuseColor[1],this.settings.lightDiffuseColor[2]);this.ambientLight=new THREE.AmbientLight(a.getHex());if(!this.ambientLight)return!1;this.scene.add(this.ambientLight);this.directionalLight=new THREE.DirectionalLight(b.getHex());if(!this.directionalLight)return!1;
a=(new THREE.Vector3).subVectors(this.cameraMove.eye,this.cameraMove.center);this.directionalLight.position.set(a.x,a.y,a.z);this.scene.add(this.directionalLight);return!0};JSM.ThreeViewer.prototype.SetRunBeforeRender=function(a){this.runBeforeRender=a};JSM.ThreeViewer.prototype.SetRunAfterRender=function(a){this.runAfterRender=a};JSM.ThreeViewer.prototype.SetClearColor=function(a){this.renderer.setClearColor(new THREE.Color(a));this.DrawIfNeeded()};
JSM.ThreeViewer.prototype.AddMesh=function(a){this.scene.add(a);this.DrawIfNeeded()};JSM.ThreeViewer.prototype.AddMeshes=function(a){var b;for(b=0;b<a.length;b++)this.scene.add(a[b]);this.DrawIfNeeded()};JSM.ThreeViewer.prototype.MeshCount=function(){var a=0,b=this;this.scene.traverse(function(c){b.IsRelevantObject(c)&&(a+=1)});return a};JSM.ThreeViewer.prototype.VertexCount=function(){var a=0,b=this;this.scene.traverse(function(c){b.IsRelevantObject(c)&&(a+=c.geometry.vertices.length)});return a};
JSM.ThreeViewer.prototype.FaceCount=function(){var a=0;this.scene.traverse(function(b){b instanceof THREE.Mesh&&(a+=b.geometry.faces.length)});return a};JSM.ThreeViewer.prototype.GetMesh=function(a){var b=null,c=0,d;for(d=0;d<this.scene.children.length;d++)if(b=this.scene.children[d],this.IsRelevantObject(b)){if(c==a)return b;c+=1}return null};JSM.ThreeViewer.prototype.RemoveMesh=function(a){a.geometry.dispose();this.scene.remove(a);this.DrawIfNeeded()};
JSM.ThreeViewer.prototype.RemoveMeshes=function(){var a,b;for(b=0;b<this.scene.children.length;b++)a=this.scene.children[b],this.IsRelevantObject(a)&&(a.geometry.dispose(),this.scene.remove(a),b--);this.DrawIfNeeded()};JSM.ThreeViewer.prototype.RemoveLastMesh=function(){var a=null,b=this;this.scene.traverse(function(c){b.IsRelevantObject(c)&&(a=c)});null!==a&&this.scene.remove(a);this.DrawIfNeeded()};
JSM.ThreeViewer.prototype.SetCamera=function(a,b,c){this.navigation.SetCamera(a,b,c);this.navigation.SetOrbitCenter(b.Clone());this.DrawIfNeeded()};JSM.ThreeViewer.prototype.Resize=function(){this.camera.aspect=this.canvas.width/this.canvas.height;this.camera.updateProjectionMatrix();this.renderer.setSize(this.canvas.width,this.canvas.height);this.DrawIfNeeded()};
JSM.ThreeViewer.prototype.FitInWindow=function(){if(0!==this.MeshCount()){var a=this.GetBoundingSphere();this.navigation.FitInWindow(a.GetCenter(),a.GetRadius());this.DrawIfNeeded()}};JSM.ThreeViewer.prototype.AdjustClippingPlanes=function(a){this.GetBoundingSphere().GetRadius()<a?(this.camera.near=0.1,this.camera.far=1E3):(this.camera.near=10,this.camera.far=1E6);this.camera.updateProjectionMatrix();this.Draw()};JSM.ThreeViewer.prototype.GetCenter=function(){return this.GetBoundingBox().GetCenter()};
JSM.ThreeViewer.prototype.GetBoundingBox=function(){var a=new JSM.Coord(JSM.Inf,JSM.Inf,JSM.Inf),b=new JSM.Coord(-JSM.Inf,-JSM.Inf,-JSM.Inf),c,d,e=this;this.scene.traverse(function(f){if(e.IsRelevantObject(f)){c=f.geometry;var g;for(g=0;g<c.vertices.length;g++)d=c.vertices[g].clone(),d.add(f.position),a.x=JSM.Minimum(a.x,d.x),a.y=JSM.Minimum(a.y,d.y),a.z=JSM.Minimum(a.z,d.z),b.x=JSM.Maximum(b.x,d.x),b.y=JSM.Maximum(b.y,d.y),b.z=JSM.Maximum(b.z,d.z)}});return new JSM.Box(a,b)};
JSM.ThreeViewer.prototype.GetBoundingSphere=function(){var a=this.GetCenter(),b=0,c,d,e,f=this;this.scene.traverse(function(g){if(f.IsRelevantObject(g)){c=g.geometry;var k;for(k=0;k<c.vertices.length;k++)d=c.vertices[k].clone(),d.add(g.position),e=a.DistanceTo(new JSM.Coord(d.x,d.y,d.z)),JSM.IsGreater(e,b)&&(b=e)}});return new JSM.Sphere(a,b)};
JSM.ThreeViewer.prototype.GetObjectsUnderPosition=function(a,b){var c=this.camera.position,d=new THREE.Vector3(2*(a/this.canvas.width)-1,2*-(b/this.canvas.height)+1,0.5);d.unproject(this.camera);d.sub(c);d.normalize();return(new THREE.Raycaster(c,d)).intersectObjects(this.scene.children)};JSM.ThreeViewer.prototype.GetObjectsUnderMouse=function(){return this.GetObjectsUnderPosition(this.navigation.mouse.curr.x,this.navigation.mouse.curr.y)};
JSM.ThreeViewer.prototype.GetObjectsUnderTouch=function(){return this.GetObjectsUnderPosition(this.navigation.touch.curr.x,this.navigation.touch.curr.y)};JSM.ThreeViewer.prototype.ProjectVector=function(a,b,c){var d=this.canvas.width/2,e=this.canvas.height/2;a=new THREE.Vector3(a,b,c);a.project(this.camera);a.x=a.x*d+d;a.y=-(a.y*e)+e;return a};JSM.ThreeViewer.prototype.EnableDraw=function(a){this.enableDraw=a};
JSM.ThreeViewer.prototype.Draw=function(){if(this.enableDraw){null!==this.runBeforeRender&&this.runBeforeRender();this.camera.position.set(this.cameraMove.eye.x,this.cameraMove.eye.y,this.cameraMove.eye.z);this.camera.up.set(this.cameraMove.up.x,this.cameraMove.up.y,this.cameraMove.up.z);this.camera.lookAt(new THREE.Vector3(this.cameraMove.center.x,this.cameraMove.center.y,this.cameraMove.center.z));var a=(new THREE.Vector3).subVectors(this.cameraMove.eye,this.cameraMove.center);this.directionalLight.position.set(a.x,
a.y,a.z);this.renderer.render(this.scene,this.camera);null!==this.runAfterRender&&this.runAfterRender();this.drawLoop&&requestAnimationFrame(this.Draw.bind(this))}};JSM.ThreeViewer.prototype.DrawIfNeeded=function(){this.drawLoop||this.Draw()};JSM.ThreeViewer.prototype.StartDrawLoop=function(){this.drawLoop=!0;this.Draw()};JSM.ThreeViewer.prototype.IsRelevantObject=function(a){return a instanceof THREE.Mesh||a instanceof THREE.LineSegments||a instanceof THREE.Points};
