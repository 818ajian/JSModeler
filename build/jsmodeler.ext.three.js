/* JSModeler 0.41 - http://www.github.com/kovacsv/JSModeler */ 'use strict';JSM.ConvertBodyToThreeMeshes=function(a,b,f){var c={textureLoadedCallback:null,hasConvexPolygons:!1};void 0!==f&&null!==f&&(c.textureLoadedCallback=JSM.ValueOrDefault(f.textureLoadedCallback,c.textureLoadedCallback),c.hasConvexPolygons=JSM.ValueOrDefault(f.hasConvexPolygons,c.hasConvexPolygons));var d=[],g=null,e=null;JSM.ExplodeBody(a,b,{hasConvexPolygons:c.hasConvexPolygons,onPointGeometryStart:function(a){e=new THREE.PointsMaterial({color:a.diffuse,size:a.pointSize});g=new THREE.Geometry},
onPointGeometryEnd:function(){var a=new THREE.Points(g,e);d.push(a)},onPoint:function(a){g.vertices.push(new THREE.Vector3(a.x,a.y,a.z))},onLineGeometryStart:function(a){e=new THREE.LineBasicMaterial({color:a.diffuse})},onLineGeometryEnd:function(){},onLine:function(a,b){var c=new THREE.Geometry;c.vertices.push(new THREE.Vector3(a.x,a.y,a.z));c.vertices.push(new THREE.Vector3(b.x,b.y,b.z));c=new THREE.Line(c,e);d.push(c)},onGeometryStart:function(a){var b=null!==a.texture,d=1!==a.opacity,f=a.diffuse,
A=a.specular,G=a.shininess;0===G&&(A=0,G=1);e=new THREE.MeshPhongMaterial({color:f,specular:A,shininess:G});a.singleSided||(e.side=THREE.DoubleSide);d&&(e.opacity=a.opacity,e.transparent=!0);b&&(a=a.texture,(new THREE.TextureLoader).load(a,function(a){a.image=JSM.ResizeImageToPowerOfTwoSides(a.image);a.wrapS=THREE.RepeatWrapping;a.wrapT=THREE.RepeatWrapping;e.map=a;e.needsUpdate=!0;null!==c.textureLoadedCallback&&c.textureLoadedCallback()}));g=new THREE.Geometry},onGeometryEnd:function(){g.computeFaceNormals();
var a=new THREE.Mesh(g,e);d.push(a)},onTriangle:function(a,b,c,d,f,e,k,p,n){var H=g.vertices.length;g.vertices.push(new THREE.Vector3(a.x,a.y,a.z));g.vertices.push(new THREE.Vector3(b.x,b.y,b.z));g.vertices.push(new THREE.Vector3(c.x,c.y,c.z));a=new THREE.Face3(H+0,H+1,H+2);g.faces.push(a);null!==d&&(null!==f&&null!==e)&&(a=[],a.push(new THREE.Vector3(d.x,d.y,d.z)),a.push(new THREE.Vector3(f.x,f.y,f.z)),a.push(new THREE.Vector3(e.x,e.y,e.z)),g.faces[g.faces.length-1].vertexNormals=a);null!==k&&(null!==
p&&null!==n)&&(d=[],d.push(new THREE.Vector2(k.x,-k.y)),d.push(new THREE.Vector2(p.x,-p.y)),d.push(new THREE.Vector2(n.x,-n.y)),g.faceVertexUvs[0].push(d))}});return d};JSM.ConvertModelToThreeMeshes=function(a,b,f){var c=[],d,g,e;for(d=0;d<a.BodyCount();d++){g=a.GetBody(d);e=JSM.ConvertBodyToThreeMeshes(g,b,f);for(g=0;g<e.length;g++)c.push(e[g])}return c};
JSM.ConvertJSONDataToThreeMeshes=function(a,b,f){function c(a,c,d){function f(a,d){function n(a,b,c,d,e){c=new THREE.Vector2(a,b);JSM.IsZero(e)||(d=Math.sin(e*JSM.DegRad),e=Math.cos(e*JSM.DegRad),c.x=e*a-d*b,c.y=d*a+e*b);c.x=t[0]+c.x*u[0];c.y=t[1]+c.y*u[1];return c}var l=a.parameters,h=g[a.material],v=h.texture,t=h.offset,u=h.scale,x=h.rotation,y=new THREE.Color,w=new THREE.Color,z=h.shininess||0;y.setRGB(h.diffuse[0],h.diffuse[1],h.diffuse[2]);w.setRGB(h.specular[0],h.specular[1],h.specular[2]);
if(void 0!==v&&null!==v){y.setRGB(1,1,1);w.setRGB(1,1,1);if(void 0===t||null===t)t=[0,0];if(void 0===u||null===u)u=[1,1];if(void 0===x||null===x)x=0}0===z&&(w.setRGB(0,0,0),z=1);var B=new THREE.MeshPhongMaterial({color:y.getHex(),specular:w.getHex(),shininess:z,side:THREE.DoubleSide});1!==h.opacity&&(B.opacity=h.opacity,B.transparent=!0);void 0!==v&&null!==v&&(new THREE.TextureLoader).load(v,function(a){a.image=JSM.ResizeImageToPowerOfTwoSides(a.image);a.wrapS=THREE.RepeatWrapping;a.wrapT=THREE.RepeatWrapping;
B.map=a;B.needsUpdate=!0;void 0!==b&&null!==b&&b()});var h=new THREE.Geometry,r,q,C,s,D,E,F,A,m;for(m=0;m<l.length;m+=9)r=3*l[m+0],q=3*l[m+1],C=3*l[m+2],s=3*l[m+3],D=3*l[m+4],E=3*l[m+5],y=2*l[m+6],w=2*l[m+7],z=2*l[m+8],F=h.vertices.length,A=h.faces.length,h.vertices.push(new THREE.Vector3(e[r+0],e[r+1],e[r+2])),h.vertices.push(new THREE.Vector3(e[q+0],e[q+1],e[q+2])),h.vertices.push(new THREE.Vector3(e[C+0],e[C+1],e[C+2])),h.faces.push(new THREE.Face3(F+0,F+1,F+2)),r=[],r.push(new THREE.Vector3(k[s+
0],k[s+1],k[s+2])),r.push(new THREE.Vector3(k[D+0],k[D+1],k[D+2])),r.push(new THREE.Vector3(k[E+0],k[E+1],k[E+2])),h.faces[A].vertexNormals=r,void 0!==v&&null!==v&&(s=[],s.push(n(p[y+0],p[y+1],t,u,x)),s.push(n(p[w+0],p[w+1],t,u,x)),s.push(n(p[z+0],p[z+1],t,u,x)),h.faceVertexUvs[0].push(s));l=new THREE.Mesh(h,B);l.originalJsonIndex=c;d.push(l)}var e=a.vertices;if(void 0!==e){var k=a.normals;if(void 0!==k){var p=a.uvs;if(void 0!==p){a=a.triangles;var n;for(n=0;n<a.length;n++)f(a[n],d)}}}}var d=[],g=
a.materials;if(void 0===g)return d;var e=a.meshes;if(void 0===e)return d;var q=0;JSM.AsyncRunTask(function(){c(e[q],q,d);q+=1;return!0},f,e.length,0,d);return d};JSM.ThreeViewer=function(){this.enableDraw=this.drawLoop=this.settings=this.navigation=this.cameraMove=this.runAfterRender=this.runBeforeRender=this.directionalLight=this.ambientLight=this.renderer=this.camera=this.scene=this.canvas=null};
JSM.ThreeViewer.prototype.Start=function(a,b){if(!JSM.IsWebGLEnabled()||!this.InitSettings(b)||!this.InitThree(a)||!this.InitCamera(b)||!this.InitLights())return!1;this.drawLoop=!1;this.enableDraw=!0;this.DrawIfNeeded();return!0};
JSM.ThreeViewer.prototype.InitSettings=function(a){this.settings={cameraEyePosition:new JSM.Coord(1,1,1),cameraCenterPosition:new JSM.Coord(0,0,0),cameraUpVector:new JSM.Coord(0,0,1),lightAmbientColor:[0.5,0.5,0.5],lightDiffuseColor:[0.5,0.5,0.5]};void 0!==a&&(void 0!==a.cameraEyePosition&&(this.settings.cameraEyePosition=JSM.CoordFromArray(a.cameraEyePosition)),void 0!==a.cameraCenterPosition&&(this.settings.cameraCenterPosition=JSM.CoordFromArray(a.cameraCenterPosition)),void 0!==a.cameraUpVector&&
(this.settings.cameraUpVector=JSM.CoordFromArray(a.cameraUpVector)),void 0!==a.lightAmbientColor&&(this.settings.lightAmbientColor=a.lightAmbientColor),void 0!==a.lightDiffuseColor&&(this.settings.lightDiffuseColor=a.lightDiffuseColor));return!0};
JSM.ThreeViewer.prototype.InitThree=function(a){this.canvas=a;if(!this.canvas||!this.canvas.getContext)return!1;this.scene=new THREE.Scene;if(!this.scene)return!1;this.renderer=new THREE.WebGLRenderer({canvas:this.canvas,antialias:!0});if(!this.renderer)return!1;this.renderer.setClearColor(new THREE.Color(16777215));this.renderer.setSize(this.canvas.width,this.canvas.height);return!0};
JSM.ThreeViewer.prototype.InitCamera=function(a){this.cameraMove=new JSM.Camera(JSM.CoordFromArray(a.cameraEyePosition),JSM.CoordFromArray(a.cameraCenterPosition),JSM.CoordFromArray(a.cameraUpVector),a.fieldOfView,a.nearClippingPlane,a.farClippingPlane);if(!this.cameraMove)return!1;this.navigation=new JSM.Navigation;if(!this.navigation.Init(this.canvas,this.cameraMove,this.DrawIfNeeded.bind(this),this.Resize.bind(this)))return!1;this.camera=new THREE.PerspectiveCamera(this.cameraMove.fieldOfView,
this.canvas.width/this.canvas.height,this.cameraMove.nearClippingPlane,this.cameraMove.farClippingPlane);if(!this.camera)return!1;this.scene.add(this.camera);return!0};
JSM.ThreeViewer.prototype.InitLights=function(){var a=new THREE.Color,b=new THREE.Color;a.setRGB(this.settings.lightAmbientColor[0],this.settings.lightAmbientColor[1],this.settings.lightAmbientColor[2]);b.setRGB(this.settings.lightDiffuseColor[0],this.settings.lightDiffuseColor[1],this.settings.lightDiffuseColor[2]);this.ambientLight=new THREE.AmbientLight(a.getHex());if(!this.ambientLight)return!1;this.scene.add(this.ambientLight);this.directionalLight=new THREE.DirectionalLight(b.getHex());if(!this.directionalLight)return!1;
a=(new THREE.Vector3).subVectors(this.cameraMove.eye,this.cameraMove.center);this.directionalLight.position.set(a.x,a.y,a.z);this.scene.add(this.directionalLight);return!0};JSM.ThreeViewer.prototype.SetRunBeforeRender=function(a){this.runBeforeRender=a};JSM.ThreeViewer.prototype.SetRunAfterRender=function(a){this.runAfterRender=a};JSM.ThreeViewer.prototype.SetClearColor=function(a){this.renderer.setClearColor(new THREE.Color(a));this.DrawIfNeeded()};
JSM.ThreeViewer.prototype.AddMesh=function(a){this.scene.add(a);this.DrawIfNeeded()};JSM.ThreeViewer.prototype.AddMeshes=function(a){var b;for(b=0;b<a.length;b++)this.scene.add(a[b]);this.DrawIfNeeded()};JSM.ThreeViewer.prototype.MeshCount=function(){var a=0;this.scene.traverse(function(b){if(b instanceof THREE.Mesh||b instanceof THREE.Line||b instanceof THREE.Points)a+=1});return a};
JSM.ThreeViewer.prototype.VertexCount=function(){var a=0;this.scene.traverse(function(b){if(b instanceof THREE.Mesh||b instanceof THREE.Line||b instanceof THREE.Points)a+=b.geometry.vertices.length});return a};JSM.ThreeViewer.prototype.FaceCount=function(){var a=0;this.scene.traverse(function(b){b instanceof THREE.Mesh&&(a+=b.geometry.faces.length)});return a};
JSM.ThreeViewer.prototype.GetMesh=function(a){var b=null,f=0,c;for(c=0;c<this.scene.children.length;c++)if(b=this.scene.children[c],b instanceof THREE.Mesh||b instanceof THREE.Line||b instanceof THREE.Points){if(f==a)return b;f+=1}return null};JSM.ThreeViewer.prototype.RemoveMesh=function(a){a.geometry.dispose();this.scene.remove(a);this.DrawIfNeeded()};
JSM.ThreeViewer.prototype.RemoveMeshes=function(){var a,b;for(b=0;b<this.scene.children.length;b++)if(a=this.scene.children[b],a instanceof THREE.Mesh||a instanceof THREE.Line||a instanceof THREE.Points)a.geometry.dispose(),this.scene.remove(a),b--;this.DrawIfNeeded()};JSM.ThreeViewer.prototype.RemoveLastMesh=function(){var a=null;this.scene.traverse(function(b){if(b instanceof THREE.Mesh||b instanceof THREE.Line||b instanceof THREE.Points)a=b});null!==a&&this.scene.remove(a);this.DrawIfNeeded()};
JSM.ThreeViewer.prototype.SetCamera=function(a,b,f){this.navigation.SetCamera(a,b,f);this.navigation.SetOrbitCenter(b.Clone());this.DrawIfNeeded()};JSM.ThreeViewer.prototype.Resize=function(){this.camera.aspect=this.canvas.width/this.canvas.height;this.camera.updateProjectionMatrix();this.renderer.setSize(this.canvas.width,this.canvas.height);this.DrawIfNeeded()};
JSM.ThreeViewer.prototype.FitInWindow=function(){if(0!==this.MeshCount()){var a=this.GetBoundingSphere();this.navigation.FitInWindow(a.GetCenter(),a.GetRadius());this.DrawIfNeeded()}};JSM.ThreeViewer.prototype.AdjustClippingPlanes=function(a){this.GetBoundingSphere().GetRadius()<a?(this.camera.near=0.1,this.camera.far=1E3):(this.camera.near=10,this.camera.far=1E6);this.camera.updateProjectionMatrix();this.Draw()};JSM.ThreeViewer.prototype.GetCenter=function(){return this.GetBoundingBox().GetCenter()};
JSM.ThreeViewer.prototype.GetBoundingBox=function(){var a=new JSM.Coord(JSM.Inf,JSM.Inf,JSM.Inf),b=new JSM.Coord(-JSM.Inf,-JSM.Inf,-JSM.Inf),f,c;this.scene.traverse(function(d){if(d instanceof THREE.Mesh||d instanceof THREE.Line||d instanceof THREE.Points){f=d.geometry;var g;for(g=0;g<f.vertices.length;g++)c=f.vertices[g].clone(),c.add(d.position),a.x=JSM.Minimum(a.x,c.x),a.y=JSM.Minimum(a.y,c.y),a.z=JSM.Minimum(a.z,c.z),b.x=JSM.Maximum(b.x,c.x),b.y=JSM.Maximum(b.y,c.y),b.z=JSM.Maximum(b.z,c.z)}});
return new JSM.Box(a,b)};JSM.ThreeViewer.prototype.GetBoundingSphere=function(){var a=this.GetCenter(),b=0,f,c,d;this.scene.traverse(function(g){if(g instanceof THREE.Mesh||g instanceof THREE.Line||g instanceof THREE.Points){f=g.geometry;var e;for(e=0;e<f.vertices.length;e++)c=f.vertices[e].clone(),c.add(g.position),d=a.DistanceTo(new JSM.Coord(c.x,c.y,c.z)),JSM.IsGreater(d,b)&&(b=d)}});return new JSM.Sphere(a,b)};
JSM.ThreeViewer.prototype.GetObjectsUnderPosition=function(a,b){var f=this.camera.position,c=new THREE.Vector3(2*(a/this.canvas.width)-1,2*-(b/this.canvas.height)+1,0.5);c.unproject(this.camera);c.sub(f);c.normalize();return(new THREE.Raycaster(f,c)).intersectObjects(this.scene.children)};JSM.ThreeViewer.prototype.GetObjectsUnderMouse=function(){return this.GetObjectsUnderPosition(this.navigation.mouse.curr.x,this.navigation.mouse.curr.y)};
JSM.ThreeViewer.prototype.GetObjectsUnderTouch=function(){return this.GetObjectsUnderPosition(this.navigation.touch.curr.x,this.navigation.touch.curr.y)};JSM.ThreeViewer.prototype.ProjectVector=function(a,b,f){var c=this.canvas.width/2,d=this.canvas.height/2;a=new THREE.Vector3(a,b,f);a.project(this.camera);a.x=a.x*c+c;a.y=-(a.y*d)+d;return a};JSM.ThreeViewer.prototype.EnableDraw=function(a){this.enableDraw=a};
JSM.ThreeViewer.prototype.Draw=function(){if(this.enableDraw){null!==this.runBeforeRender&&this.runBeforeRender();this.camera.position.set(this.cameraMove.eye.x,this.cameraMove.eye.y,this.cameraMove.eye.z);this.camera.up.set(this.cameraMove.up.x,this.cameraMove.up.y,this.cameraMove.up.z);this.camera.lookAt(new THREE.Vector3(this.cameraMove.center.x,this.cameraMove.center.y,this.cameraMove.center.z));var a=(new THREE.Vector3).subVectors(this.cameraMove.eye,this.cameraMove.center);this.directionalLight.position.set(a.x,
a.y,a.z);this.renderer.render(this.scene,this.camera);null!==this.runAfterRender&&this.runAfterRender();this.drawLoop&&requestAnimationFrame(this.Draw.bind(this))}};JSM.ThreeViewer.prototype.DrawIfNeeded=function(){this.drawLoop||this.Draw()};JSM.ThreeViewer.prototype.StartDrawLoop=function(){this.drawLoop=!0;this.Draw()};
